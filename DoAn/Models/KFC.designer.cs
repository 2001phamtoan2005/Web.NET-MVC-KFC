#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_KFC")]
	public partial class KFCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT_CUSTOMER(ACCOUNT_CUSTOMER instance);
    partial void UpdateACCOUNT_CUSTOMER(ACCOUNT_CUSTOMER instance);
    partial void DeleteACCOUNT_CUSTOMER(ACCOUNT_CUSTOMER instance);
    partial void InsertRECEIPT(RECEIPT instance);
    partial void UpdateRECEIPT(RECEIPT instance);
    partial void DeleteRECEIPT(RECEIPT instance);
    partial void InsertACCOUNT_EMPLOYEE(ACCOUNT_EMPLOYEE instance);
    partial void UpdateACCOUNT_EMPLOYEE(ACCOUNT_EMPLOYEE instance);
    partial void DeleteACCOUNT_EMPLOYEE(ACCOUNT_EMPLOYEE instance);
    partial void InsertCART(CART instance);
    partial void UpdateCART(CART instance);
    partial void DeleteCART(CART instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertDETAIL_RECEIPT(DETAIL_RECEIPT instance);
    partial void UpdateDETAIL_RECEIPT(DETAIL_RECEIPT instance);
    partial void DeleteDETAIL_RECEIPT(DETAIL_RECEIPT instance);
    partial void InsertDISCOUNT(DISCOUNT instance);
    partial void UpdateDISCOUNT(DISCOUNT instance);
    partial void DeleteDISCOUNT(DISCOUNT instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    #endregion
		
		public KFCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_KFCConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT_CUSTOMER> ACCOUNT_CUSTOMERs
		{
			get
			{
				return this.GetTable<ACCOUNT_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<RECEIPT> RECEIPTs
		{
			get
			{
				return this.GetTable<RECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<ACCOUNT_EMPLOYEE> ACCOUNT_EMPLOYEEs
		{
			get
			{
				return this.GetTable<ACCOUNT_EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<CART> CARTs
		{
			get
			{
				return this.GetTable<CART>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<DETAIL_RECEIPT> DETAIL_RECEIPTs
		{
			get
			{
				return this.GetTable<DETAIL_RECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<DISCOUNT> DISCOUNTs
		{
			get
			{
				return this.GetTable<DISCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT_CUSTOMER")]
	public partial class ACCOUNT_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME_CUSTOMER;
		
		private string _PASSWORD_CUSTOMER;
		
		private string _ID_CUSTOMER;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAME_CUSTOMERChanging(string value);
    partial void OnUSERNAME_CUSTOMERChanged();
    partial void OnPASSWORD_CUSTOMERChanging(string value);
    partial void OnPASSWORD_CUSTOMERChanged();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    #endregion
		
		public ACCOUNT_CUSTOMER()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME_CUSTOMER", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME_CUSTOMER
		{
			get
			{
				return this._USERNAME_CUSTOMER;
			}
			set
			{
				if ((this._USERNAME_CUSTOMER != value))
				{
					this.OnUSERNAME_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._USERNAME_CUSTOMER = value;
					this.SendPropertyChanged("USERNAME_CUSTOMER");
					this.OnUSERNAME_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD_CUSTOMER", DbType="NVarChar(50)")]
		public string PASSWORD_CUSTOMER
		{
			get
			{
				return this._PASSWORD_CUSTOMER;
			}
			set
			{
				if ((this._PASSWORD_CUSTOMER != value))
				{
					this.OnPASSWORD_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD_CUSTOMER = value;
					this.SendPropertyChanged("PASSWORD_CUSTOMER");
					this.OnPASSWORD_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ACCOUNT_CUSTOMER", Storage="_CUSTOMER", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.ACCOUNT_CUSTOMERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.ACCOUNT_CUSTOMERs.Add(this);
						this._ID_CUSTOMER = value.ID_CUSTOMER;
					}
					else
					{
						this._ID_CUSTOMER = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RECEIPT")]
	public partial class RECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_RECEIPT;
		
		private string _ID_CUSTOMER;
		
		private System.Nullable<System.DateTime> _ORDER_DATE;
		
		private System.Nullable<System.DateTime> _DELIVERY_DATE;
		
		private string _STATUS_RECEIPT;
		
		private string _CODE_DISCOUNT;
		
		private System.Nullable<decimal> _TOTAL;
		
		private EntitySet<DETAIL_RECEIPT> _DETAIL_RECEIPTs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<DISCOUNT> _DISCOUNT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RECEIPTChanging(string value);
    partial void OnID_RECEIPTChanged();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnORDER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnORDER_DATEChanged();
    partial void OnDELIVERY_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDELIVERY_DATEChanged();
    partial void OnSTATUS_RECEIPTChanging(string value);
    partial void OnSTATUS_RECEIPTChanged();
    partial void OnCODE_DISCOUNTChanging(string value);
    partial void OnCODE_DISCOUNTChanged();
    partial void OnTOTALChanging(System.Nullable<decimal> value);
    partial void OnTOTALChanged();
    #endregion
		
		public RECEIPT()
		{
			this._DETAIL_RECEIPTs = new EntitySet<DETAIL_RECEIPT>(new Action<DETAIL_RECEIPT>(this.attach_DETAIL_RECEIPTs), new Action<DETAIL_RECEIPT>(this.detach_DETAIL_RECEIPTs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._DISCOUNT = default(EntityRef<DISCOUNT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_RECEIPT
		{
			get
			{
				return this._ID_RECEIPT;
			}
			set
			{
				if ((this._ID_RECEIPT != value))
				{
					this.OnID_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._ID_RECEIPT = value;
					this.SendPropertyChanged("ID_RECEIPT");
					this.OnID_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="Char(50)")]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ORDER_DATE
		{
			get
			{
				return this._ORDER_DATE;
			}
			set
			{
				if ((this._ORDER_DATE != value))
				{
					this.OnORDER_DATEChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DATE = value;
					this.SendPropertyChanged("ORDER_DATE");
					this.OnORDER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELIVERY_DATE
		{
			get
			{
				return this._DELIVERY_DATE;
			}
			set
			{
				if ((this._DELIVERY_DATE != value))
				{
					this.OnDELIVERY_DATEChanging(value);
					this.SendPropertyChanging();
					this._DELIVERY_DATE = value;
					this.SendPropertyChanged("DELIVERY_DATE");
					this.OnDELIVERY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_RECEIPT", DbType="NVarChar(MAX)")]
		public string STATUS_RECEIPT
		{
			get
			{
				return this._STATUS_RECEIPT;
			}
			set
			{
				if ((this._STATUS_RECEIPT != value))
				{
					this.OnSTATUS_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._STATUS_RECEIPT = value;
					this.SendPropertyChanged("STATUS_RECEIPT");
					this.OnSTATUS_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_DISCOUNT", DbType="Char(50)")]
		public string CODE_DISCOUNT
		{
			get
			{
				return this._CODE_DISCOUNT;
			}
			set
			{
				if ((this._CODE_DISCOUNT != value))
				{
					if (this._DISCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODE_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._CODE_DISCOUNT = value;
					this.SendPropertyChanged("CODE_DISCOUNT");
					this.OnCODE_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Money")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECEIPT_DETAIL_RECEIPT", Storage="_DETAIL_RECEIPTs", ThisKey="ID_RECEIPT", OtherKey="ID_RECEIPT")]
		public EntitySet<DETAIL_RECEIPT> DETAIL_RECEIPTs
		{
			get
			{
				return this._DETAIL_RECEIPTs;
			}
			set
			{
				this._DETAIL_RECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_RECEIPT", Storage="_CUSTOMER", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.RECEIPTs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.RECEIPTs.Add(this);
						this._ID_CUSTOMER = value.ID_CUSTOMER;
					}
					else
					{
						this._ID_CUSTOMER = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOUNT_RECEIPT", Storage="_DISCOUNT", ThisKey="CODE_DISCOUNT", OtherKey="CODE_DISCOUNT", IsForeignKey=true)]
		public DISCOUNT DISCOUNT
		{
			get
			{
				return this._DISCOUNT.Entity;
			}
			set
			{
				DISCOUNT previousValue = this._DISCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._DISCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISCOUNT.Entity = null;
						previousValue.RECEIPTs.Remove(this);
					}
					this._DISCOUNT.Entity = value;
					if ((value != null))
					{
						value.RECEIPTs.Add(this);
						this._CODE_DISCOUNT = value.CODE_DISCOUNT;
					}
					else
					{
						this._CODE_DISCOUNT = default(string);
					}
					this.SendPropertyChanged("DISCOUNT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAIL_RECEIPTs(DETAIL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.RECEIPT = this;
		}
		
		private void detach_DETAIL_RECEIPTs(DETAIL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.RECEIPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT_EMPLOYEE")]
	public partial class ACCOUNT_EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME_EMPLOYEE;
		
		private string _PASSWORD_EMPLOYEE;
		
		private string _ID_EMPLOYEE;
		
		private System.Nullable<int> _TYPE_ACCOUNT;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAME_EMPLOYEEChanging(string value);
    partial void OnUSERNAME_EMPLOYEEChanged();
    partial void OnPASSWORD_EMPLOYEEChanging(string value);
    partial void OnPASSWORD_EMPLOYEEChanged();
    partial void OnID_EMPLOYEEChanging(string value);
    partial void OnID_EMPLOYEEChanged();
    partial void OnTYPE_ACCOUNTChanging(System.Nullable<int> value);
    partial void OnTYPE_ACCOUNTChanged();
    #endregion
		
		public ACCOUNT_EMPLOYEE()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME_EMPLOYEE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME_EMPLOYEE
		{
			get
			{
				return this._USERNAME_EMPLOYEE;
			}
			set
			{
				if ((this._USERNAME_EMPLOYEE != value))
				{
					this.OnUSERNAME_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME_EMPLOYEE = value;
					this.SendPropertyChanged("USERNAME_EMPLOYEE");
					this.OnUSERNAME_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD_EMPLOYEE", DbType="NVarChar(50)")]
		public string PASSWORD_EMPLOYEE
		{
			get
			{
				return this._PASSWORD_EMPLOYEE;
			}
			set
			{
				if ((this._PASSWORD_EMPLOYEE != value))
				{
					this.OnPASSWORD_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD_EMPLOYEE = value;
					this.SendPropertyChanged("PASSWORD_EMPLOYEE");
					this.OnPASSWORD_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOYEE", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string ID_EMPLOYEE
		{
			get
			{
				return this._ID_EMPLOYEE;
			}
			set
			{
				if ((this._ID_EMPLOYEE != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOYEE = value;
					this.SendPropertyChanged("ID_EMPLOYEE");
					this.OnID_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_ACCOUNT", DbType="Int")]
		public System.Nullable<int> TYPE_ACCOUNT
		{
			get
			{
				return this._TYPE_ACCOUNT;
			}
			set
			{
				if ((this._TYPE_ACCOUNT != value))
				{
					this.OnTYPE_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._TYPE_ACCOUNT = value;
					this.SendPropertyChanged("TYPE_ACCOUNT");
					this.OnTYPE_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_ACCOUNT_EMPLOYEE", Storage="_EMPLOYEE", ThisKey="ID_EMPLOYEE", OtherKey="ID_EMPLOYEE", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.ACCOUNT_EMPLOYEEs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.ACCOUNT_EMPLOYEEs.Add(this);
						this._ID_EMPLOYEE = value.ID_EMPLOYEE;
					}
					else
					{
						this._ID_EMPLOYEE = default(string);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CART")]
	public partial class CART : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PRODUCT;
		
		private string _ID_CUSTOMER;
		
		private string _IMAGE_PRODUCT;
		
		private string _NAME_PRODUCT;
		
		private System.Nullable<int> _COST;
		
		private System.Nullable<int> _QUANTITY_PRODUCT;
		
		private System.Nullable<int> _TOTAL;
		
		private string _DESCRIBE;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PRODUCTChanging(string value);
    partial void OnID_PRODUCTChanged();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnIMAGE_PRODUCTChanging(string value);
    partial void OnIMAGE_PRODUCTChanged();
    partial void OnNAME_PRODUCTChanging(string value);
    partial void OnNAME_PRODUCTChanged();
    partial void OnCOSTChanging(System.Nullable<int> value);
    partial void OnCOSTChanged();
    partial void OnQUANTITY_PRODUCTChanging(System.Nullable<int> value);
    partial void OnQUANTITY_PRODUCTChanged();
    partial void OnTOTALChanging(System.Nullable<int> value);
    partial void OnTOTALChanged();
    partial void OnDESCRIBEChanging(string value);
    partial void OnDESCRIBEChanged();
    #endregion
		
		public CART()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_PRODUCT", DbType="NVarChar(MAX)")]
		public string IMAGE_PRODUCT
		{
			get
			{
				return this._IMAGE_PRODUCT;
			}
			set
			{
				if ((this._IMAGE_PRODUCT != value))
				{
					this.OnIMAGE_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_PRODUCT = value;
					this.SendPropertyChanged("IMAGE_PRODUCT");
					this.OnIMAGE_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_PRODUCT", DbType="NVarChar(50)")]
		public string NAME_PRODUCT
		{
			get
			{
				return this._NAME_PRODUCT;
			}
			set
			{
				if ((this._NAME_PRODUCT != value))
				{
					this.OnNAME_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._NAME_PRODUCT = value;
					this.SendPropertyChanged("NAME_PRODUCT");
					this.OnNAME_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COST", DbType="Int")]
		public System.Nullable<int> COST
		{
			get
			{
				return this._COST;
			}
			set
			{
				if ((this._COST != value))
				{
					this.OnCOSTChanging(value);
					this.SendPropertyChanging();
					this._COST = value;
					this.SendPropertyChanged("COST");
					this.OnCOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_PRODUCT", DbType="Int")]
		public System.Nullable<int> QUANTITY_PRODUCT
		{
			get
			{
				return this._QUANTITY_PRODUCT;
			}
			set
			{
				if ((this._QUANTITY_PRODUCT != value))
				{
					this.OnQUANTITY_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_PRODUCT = value;
					this.SendPropertyChanged("QUANTITY_PRODUCT");
					this.OnQUANTITY_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIBE", DbType="NVarChar(MAX)")]
		public string DESCRIBE
		{
			get
			{
				return this._DESCRIBE;
			}
			set
			{
				if ((this._DESCRIBE != value))
				{
					this.OnDESCRIBEChanging(value);
					this.SendPropertyChanging();
					this._DESCRIBE = value;
					this.SendPropertyChanged("DESCRIBE");
					this.OnDESCRIBEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CART", Storage="_CUSTOMER", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.CARTs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.CARTs.Add(this);
						this._ID_CUSTOMER = value.ID_CUSTOMER;
					}
					else
					{
						this._ID_CUSTOMER = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CATEGORY;
		
		private string _NAME_CATEGORY;
		
		private string _POSITION;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CATEGORYChanging(string value);
    partial void OnID_CATEGORYChanged();
    partial void OnNAME_CATEGORYChanging(string value);
    partial void OnNAME_CATEGORYChanged();
    partial void OnPOSITIONChanging(string value);
    partial void OnPOSITIONChanged();
    #endregion
		
		public CATEGORY()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CATEGORY", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CATEGORY
		{
			get
			{
				return this._ID_CATEGORY;
			}
			set
			{
				if ((this._ID_CATEGORY != value))
				{
					this.OnID_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._ID_CATEGORY = value;
					this.SendPropertyChanged("ID_CATEGORY");
					this.OnID_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_CATEGORY", DbType="NVarChar(50)")]
		public string NAME_CATEGORY
		{
			get
			{
				return this._NAME_CATEGORY;
			}
			set
			{
				if ((this._NAME_CATEGORY != value))
				{
					this.OnNAME_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._NAME_CATEGORY = value;
					this.SendPropertyChanged("NAME_CATEGORY");
					this.OnNAME_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION", DbType="Char(10)")]
		public string POSITION
		{
			get
			{
				return this._POSITION;
			}
			set
			{
				if ((this._POSITION != value))
				{
					this.OnPOSITIONChanging(value);
					this.SendPropertyChanging();
					this._POSITION = value;
					this.SendPropertyChanged("POSITION");
					this.OnPOSITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_PRODUCTs", ThisKey="ID_CATEGORY", OtherKey="ID_CATEGORY")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CUSTOMER;
		
		private string _NAME_CUSTOMER;
		
		private System.Nullable<System.DateTime> _DATEOFBIRTH_CUSTOMER;
		
		private string _ADDRESS_CITY;
		
		private string _ADDRESS_DISTRICT;
		
		private string _ADDRESS_WARD;
		
		private string _ADDRESS_CUSTOMER;
		
		private string _PHONE_CUSTOMER;
		
		private string _GMAIL;
		
		private string _SEX_CUSTOMER;
		
		private EntitySet<ACCOUNT_CUSTOMER> _ACCOUNT_CUSTOMERs;
		
		private EntitySet<RECEIPT> _RECEIPTs;
		
		private EntitySet<CART> _CARTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnNAME_CUSTOMERChanging(string value);
    partial void OnNAME_CUSTOMERChanged();
    partial void OnDATEOFBIRTH_CUSTOMERChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEOFBIRTH_CUSTOMERChanged();
    partial void OnADDRESS_CITYChanging(string value);
    partial void OnADDRESS_CITYChanged();
    partial void OnADDRESS_DISTRICTChanging(string value);
    partial void OnADDRESS_DISTRICTChanged();
    partial void OnADDRESS_WARDChanging(string value);
    partial void OnADDRESS_WARDChanged();
    partial void OnADDRESS_CUSTOMERChanging(string value);
    partial void OnADDRESS_CUSTOMERChanged();
    partial void OnPHONE_CUSTOMERChanging(string value);
    partial void OnPHONE_CUSTOMERChanged();
    partial void OnGMAILChanging(string value);
    partial void OnGMAILChanged();
    partial void OnSEX_CUSTOMERChanging(string value);
    partial void OnSEX_CUSTOMERChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._ACCOUNT_CUSTOMERs = new EntitySet<ACCOUNT_CUSTOMER>(new Action<ACCOUNT_CUSTOMER>(this.attach_ACCOUNT_CUSTOMERs), new Action<ACCOUNT_CUSTOMER>(this.detach_ACCOUNT_CUSTOMERs));
			this._RECEIPTs = new EntitySet<RECEIPT>(new Action<RECEIPT>(this.attach_RECEIPTs), new Action<RECEIPT>(this.detach_RECEIPTs));
			this._CARTs = new EntitySet<CART>(new Action<CART>(this.attach_CARTs), new Action<CART>(this.detach_CARTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_CUSTOMER", DbType="NVarChar(50)")]
		public string NAME_CUSTOMER
		{
			get
			{
				return this._NAME_CUSTOMER;
			}
			set
			{
				if ((this._NAME_CUSTOMER != value))
				{
					this.OnNAME_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._NAME_CUSTOMER = value;
					this.SendPropertyChanged("NAME_CUSTOMER");
					this.OnNAME_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEOFBIRTH_CUSTOMER", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEOFBIRTH_CUSTOMER
		{
			get
			{
				return this._DATEOFBIRTH_CUSTOMER;
			}
			set
			{
				if ((this._DATEOFBIRTH_CUSTOMER != value))
				{
					this.OnDATEOFBIRTH_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._DATEOFBIRTH_CUSTOMER = value;
					this.SendPropertyChanged("DATEOFBIRTH_CUSTOMER");
					this.OnDATEOFBIRTH_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_CITY", DbType="NVarChar(MAX)")]
		public string ADDRESS_CITY
		{
			get
			{
				return this._ADDRESS_CITY;
			}
			set
			{
				if ((this._ADDRESS_CITY != value))
				{
					this.OnADDRESS_CITYChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_CITY = value;
					this.SendPropertyChanged("ADDRESS_CITY");
					this.OnADDRESS_CITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_DISTRICT", DbType="NVarChar(MAX)")]
		public string ADDRESS_DISTRICT
		{
			get
			{
				return this._ADDRESS_DISTRICT;
			}
			set
			{
				if ((this._ADDRESS_DISTRICT != value))
				{
					this.OnADDRESS_DISTRICTChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_DISTRICT = value;
					this.SendPropertyChanged("ADDRESS_DISTRICT");
					this.OnADDRESS_DISTRICTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_WARD", DbType="NVarChar(MAX)")]
		public string ADDRESS_WARD
		{
			get
			{
				return this._ADDRESS_WARD;
			}
			set
			{
				if ((this._ADDRESS_WARD != value))
				{
					this.OnADDRESS_WARDChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_WARD = value;
					this.SendPropertyChanged("ADDRESS_WARD");
					this.OnADDRESS_WARDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_CUSTOMER", DbType="NVarChar(MAX)")]
		public string ADDRESS_CUSTOMER
		{
			get
			{
				return this._ADDRESS_CUSTOMER;
			}
			set
			{
				if ((this._ADDRESS_CUSTOMER != value))
				{
					this.OnADDRESS_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_CUSTOMER = value;
					this.SendPropertyChanged("ADDRESS_CUSTOMER");
					this.OnADDRESS_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE_CUSTOMER", DbType="Char(11)")]
		public string PHONE_CUSTOMER
		{
			get
			{
				return this._PHONE_CUSTOMER;
			}
			set
			{
				if ((this._PHONE_CUSTOMER != value))
				{
					this.OnPHONE_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._PHONE_CUSTOMER = value;
					this.SendPropertyChanged("PHONE_CUSTOMER");
					this.OnPHONE_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMAIL", DbType="NVarChar(30)")]
		public string GMAIL
		{
			get
			{
				return this._GMAIL;
			}
			set
			{
				if ((this._GMAIL != value))
				{
					this.OnGMAILChanging(value);
					this.SendPropertyChanging();
					this._GMAIL = value;
					this.SendPropertyChanged("GMAIL");
					this.OnGMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEX_CUSTOMER", DbType="Char(10)")]
		public string SEX_CUSTOMER
		{
			get
			{
				return this._SEX_CUSTOMER;
			}
			set
			{
				if ((this._SEX_CUSTOMER != value))
				{
					this.OnSEX_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._SEX_CUSTOMER = value;
					this.SendPropertyChanged("SEX_CUSTOMER");
					this.OnSEX_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ACCOUNT_CUSTOMER", Storage="_ACCOUNT_CUSTOMERs", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER")]
		public EntitySet<ACCOUNT_CUSTOMER> ACCOUNT_CUSTOMERs
		{
			get
			{
				return this._ACCOUNT_CUSTOMERs;
			}
			set
			{
				this._ACCOUNT_CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_RECEIPT", Storage="_RECEIPTs", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER")]
		public EntitySet<RECEIPT> RECEIPTs
		{
			get
			{
				return this._RECEIPTs;
			}
			set
			{
				this._RECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CART", Storage="_CARTs", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER")]
		public EntitySet<CART> CARTs
		{
			get
			{
				return this._CARTs;
			}
			set
			{
				this._CARTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCOUNT_CUSTOMERs(ACCOUNT_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_ACCOUNT_CUSTOMERs(ACCOUNT_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_RECEIPTs(RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_RECEIPTs(RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_CARTs(CART entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETAIL_RECEIPT")]
	public partial class DETAIL_RECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ID_RECEIPT;
		
		private string _ID_PRODUCT;
		
		private System.Nullable<int> _QUANTITY;
		
		private System.Nullable<int> _COST;
		
		private EntityRef<RECEIPT> _RECEIPT;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnID_RECEIPTChanging(string value);
    partial void OnID_RECEIPTChanged();
    partial void OnID_PRODUCTChanging(string value);
    partial void OnID_PRODUCTChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    partial void OnCOSTChanging(System.Nullable<int> value);
    partial void OnCOSTChanged();
    #endregion
		
		public DETAIL_RECEIPT()
		{
			this._RECEIPT = default(EntityRef<RECEIPT>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string ID_RECEIPT
		{
			get
			{
				return this._ID_RECEIPT;
			}
			set
			{
				if ((this._ID_RECEIPT != value))
				{
					if (this._RECEIPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._ID_RECEIPT = value;
					this.SendPropertyChanged("ID_RECEIPT");
					this.OnID_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COST", DbType="Int")]
		public System.Nullable<int> COST
		{
			get
			{
				return this._COST;
			}
			set
			{
				if ((this._COST != value))
				{
					this.OnCOSTChanging(value);
					this.SendPropertyChanging();
					this._COST = value;
					this.SendPropertyChanged("COST");
					this.OnCOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RECEIPT_DETAIL_RECEIPT", Storage="_RECEIPT", ThisKey="ID_RECEIPT", OtherKey="ID_RECEIPT", IsForeignKey=true)]
		public RECEIPT RECEIPT
		{
			get
			{
				return this._RECEIPT.Entity;
			}
			set
			{
				RECEIPT previousValue = this._RECEIPT.Entity;
				if (((previousValue != value) 
							|| (this._RECEIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RECEIPT.Entity = null;
						previousValue.DETAIL_RECEIPTs.Remove(this);
					}
					this._RECEIPT.Entity = value;
					if ((value != null))
					{
						value.DETAIL_RECEIPTs.Add(this);
						this._ID_RECEIPT = value.ID_RECEIPT;
					}
					else
					{
						this._ID_RECEIPT = default(string);
					}
					this.SendPropertyChanged("RECEIPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_RECEIPT", Storage="_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.DETAIL_RECEIPTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.DETAIL_RECEIPTs.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(string);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISCOUNT")]
	public partial class DISCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CODE_DISCOUNT;
		
		private System.Nullable<int> _PERCENT_DISCOUNT;
		
		private System.Nullable<double> _MONEY_DISCOUNT;
		
		private System.Nullable<System.DateTime> _START_DAY;
		
		private System.Nullable<System.DateTime> _END_DAY;
		
		private System.Nullable<int> _QUANTITY;
		
		private EntitySet<RECEIPT> _RECEIPTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODE_DISCOUNTChanging(string value);
    partial void OnCODE_DISCOUNTChanged();
    partial void OnPERCENT_DISCOUNTChanging(System.Nullable<int> value);
    partial void OnPERCENT_DISCOUNTChanged();
    partial void OnMONEY_DISCOUNTChanging(System.Nullable<double> value);
    partial void OnMONEY_DISCOUNTChanged();
    partial void OnSTART_DAYChanging(System.Nullable<System.DateTime> value);
    partial void OnSTART_DAYChanged();
    partial void OnEND_DAYChanging(System.Nullable<System.DateTime> value);
    partial void OnEND_DAYChanged();
    partial void OnQUANTITYChanging(System.Nullable<int> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public DISCOUNT()
		{
			this._RECEIPTs = new EntitySet<RECEIPT>(new Action<RECEIPT>(this.attach_RECEIPTs), new Action<RECEIPT>(this.detach_RECEIPTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_DISCOUNT", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CODE_DISCOUNT
		{
			get
			{
				return this._CODE_DISCOUNT;
			}
			set
			{
				if ((this._CODE_DISCOUNT != value))
				{
					this.OnCODE_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._CODE_DISCOUNT = value;
					this.SendPropertyChanged("CODE_DISCOUNT");
					this.OnCODE_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERCENT_DISCOUNT", DbType="Int")]
		public System.Nullable<int> PERCENT_DISCOUNT
		{
			get
			{
				return this._PERCENT_DISCOUNT;
			}
			set
			{
				if ((this._PERCENT_DISCOUNT != value))
				{
					this.OnPERCENT_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._PERCENT_DISCOUNT = value;
					this.SendPropertyChanged("PERCENT_DISCOUNT");
					this.OnPERCENT_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONEY_DISCOUNT", DbType="Float")]
		public System.Nullable<double> MONEY_DISCOUNT
		{
			get
			{
				return this._MONEY_DISCOUNT;
			}
			set
			{
				if ((this._MONEY_DISCOUNT != value))
				{
					this.OnMONEY_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._MONEY_DISCOUNT = value;
					this.SendPropertyChanged("MONEY_DISCOUNT");
					this.OnMONEY_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_DAY", DbType="Date")]
		public System.Nullable<System.DateTime> START_DAY
		{
			get
			{
				return this._START_DAY;
			}
			set
			{
				if ((this._START_DAY != value))
				{
					this.OnSTART_DAYChanging(value);
					this.SendPropertyChanging();
					this._START_DAY = value;
					this.SendPropertyChanged("START_DAY");
					this.OnSTART_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_DAY", DbType="Date")]
		public System.Nullable<System.DateTime> END_DAY
		{
			get
			{
				return this._END_DAY;
			}
			set
			{
				if ((this._END_DAY != value))
				{
					this.OnEND_DAYChanging(value);
					this.SendPropertyChanging();
					this._END_DAY = value;
					this.SendPropertyChanged("END_DAY");
					this.OnEND_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int")]
		public System.Nullable<int> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DISCOUNT_RECEIPT", Storage="_RECEIPTs", ThisKey="CODE_DISCOUNT", OtherKey="CODE_DISCOUNT")]
		public EntitySet<RECEIPT> RECEIPTs
		{
			get
			{
				return this._RECEIPTs;
			}
			set
			{
				this._RECEIPTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RECEIPTs(RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.DISCOUNT = this;
		}
		
		private void detach_RECEIPTs(RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.DISCOUNT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_EMPLOYEE;
		
		private string _NAME_EMPLOYEE;
		
		private System.Nullable<System.DateTime> _DATEOFBIRTH_EMPLOYEE;
		
		private string _ADDRESS_EMPLOYEE;
		
		private string _PHONE_EMPLOYEE;
		
		private string _GMAIL;
		
		private string _SEX_EMPLOYEE;
		
		private EntitySet<ACCOUNT_EMPLOYEE> _ACCOUNT_EMPLOYEEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EMPLOYEEChanging(string value);
    partial void OnID_EMPLOYEEChanged();
    partial void OnNAME_EMPLOYEEChanging(string value);
    partial void OnNAME_EMPLOYEEChanged();
    partial void OnDATEOFBIRTH_EMPLOYEEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEOFBIRTH_EMPLOYEEChanged();
    partial void OnADDRESS_EMPLOYEEChanging(string value);
    partial void OnADDRESS_EMPLOYEEChanged();
    partial void OnPHONE_EMPLOYEEChanging(string value);
    partial void OnPHONE_EMPLOYEEChanged();
    partial void OnGMAILChanging(string value);
    partial void OnGMAILChanged();
    partial void OnSEX_EMPLOYEEChanging(string value);
    partial void OnSEX_EMPLOYEEChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._ACCOUNT_EMPLOYEEs = new EntitySet<ACCOUNT_EMPLOYEE>(new Action<ACCOUNT_EMPLOYEE>(this.attach_ACCOUNT_EMPLOYEEs), new Action<ACCOUNT_EMPLOYEE>(this.detach_ACCOUNT_EMPLOYEEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOYEE", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_EMPLOYEE
		{
			get
			{
				return this._ID_EMPLOYEE;
			}
			set
			{
				if ((this._ID_EMPLOYEE != value))
				{
					this.OnID_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOYEE = value;
					this.SendPropertyChanged("ID_EMPLOYEE");
					this.OnID_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_EMPLOYEE", DbType="NVarChar(50)")]
		public string NAME_EMPLOYEE
		{
			get
			{
				return this._NAME_EMPLOYEE;
			}
			set
			{
				if ((this._NAME_EMPLOYEE != value))
				{
					this.OnNAME_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._NAME_EMPLOYEE = value;
					this.SendPropertyChanged("NAME_EMPLOYEE");
					this.OnNAME_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEOFBIRTH_EMPLOYEE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEOFBIRTH_EMPLOYEE
		{
			get
			{
				return this._DATEOFBIRTH_EMPLOYEE;
			}
			set
			{
				if ((this._DATEOFBIRTH_EMPLOYEE != value))
				{
					this.OnDATEOFBIRTH_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._DATEOFBIRTH_EMPLOYEE = value;
					this.SendPropertyChanged("DATEOFBIRTH_EMPLOYEE");
					this.OnDATEOFBIRTH_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_EMPLOYEE", DbType="NVarChar(MAX)")]
		public string ADDRESS_EMPLOYEE
		{
			get
			{
				return this._ADDRESS_EMPLOYEE;
			}
			set
			{
				if ((this._ADDRESS_EMPLOYEE != value))
				{
					this.OnADDRESS_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_EMPLOYEE = value;
					this.SendPropertyChanged("ADDRESS_EMPLOYEE");
					this.OnADDRESS_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE_EMPLOYEE", DbType="Char(11)")]
		public string PHONE_EMPLOYEE
		{
			get
			{
				return this._PHONE_EMPLOYEE;
			}
			set
			{
				if ((this._PHONE_EMPLOYEE != value))
				{
					this.OnPHONE_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._PHONE_EMPLOYEE = value;
					this.SendPropertyChanged("PHONE_EMPLOYEE");
					this.OnPHONE_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMAIL", DbType="NVarChar(30)")]
		public string GMAIL
		{
			get
			{
				return this._GMAIL;
			}
			set
			{
				if ((this._GMAIL != value))
				{
					this.OnGMAILChanging(value);
					this.SendPropertyChanging();
					this._GMAIL = value;
					this.SendPropertyChanged("GMAIL");
					this.OnGMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEX_EMPLOYEE", DbType="Char(10)")]
		public string SEX_EMPLOYEE
		{
			get
			{
				return this._SEX_EMPLOYEE;
			}
			set
			{
				if ((this._SEX_EMPLOYEE != value))
				{
					this.OnSEX_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._SEX_EMPLOYEE = value;
					this.SendPropertyChanged("SEX_EMPLOYEE");
					this.OnSEX_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_ACCOUNT_EMPLOYEE", Storage="_ACCOUNT_EMPLOYEEs", ThisKey="ID_EMPLOYEE", OtherKey="ID_EMPLOYEE")]
		public EntitySet<ACCOUNT_EMPLOYEE> ACCOUNT_EMPLOYEEs
		{
			get
			{
				return this._ACCOUNT_EMPLOYEEs;
			}
			set
			{
				this._ACCOUNT_EMPLOYEEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCOUNT_EMPLOYEEs(ACCOUNT_EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_ACCOUNT_EMPLOYEEs(ACCOUNT_EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PRODUCT;
		
		private string _NAME_PRODUCT;
		
		private System.Nullable<int> _COST;
		
		private string _DESCRIBE;
		
		private string _IMAGE_PRODUCT;
		
		private string _ID_CATEGORY;
		
		private EntitySet<DETAIL_RECEIPT> _DETAIL_RECEIPTs;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PRODUCTChanging(string value);
    partial void OnID_PRODUCTChanged();
    partial void OnNAME_PRODUCTChanging(string value);
    partial void OnNAME_PRODUCTChanged();
    partial void OnCOSTChanging(System.Nullable<int> value);
    partial void OnCOSTChanged();
    partial void OnDESCRIBEChanging(string value);
    partial void OnDESCRIBEChanged();
    partial void OnIMAGE_PRODUCTChanging(string value);
    partial void OnIMAGE_PRODUCTChanged();
    partial void OnID_CATEGORYChanging(string value);
    partial void OnID_CATEGORYChanged();
    #endregion
		
		public PRODUCT()
		{
			this._DETAIL_RECEIPTs = new EntitySet<DETAIL_RECEIPT>(new Action<DETAIL_RECEIPT>(this.attach_DETAIL_RECEIPTs), new Action<DETAIL_RECEIPT>(this.detach_DETAIL_RECEIPTs));
			this._CATEGORY = default(EntityRef<CATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_PRODUCT", DbType="NVarChar(50)")]
		public string NAME_PRODUCT
		{
			get
			{
				return this._NAME_PRODUCT;
			}
			set
			{
				if ((this._NAME_PRODUCT != value))
				{
					this.OnNAME_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._NAME_PRODUCT = value;
					this.SendPropertyChanged("NAME_PRODUCT");
					this.OnNAME_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COST", DbType="Int")]
		public System.Nullable<int> COST
		{
			get
			{
				return this._COST;
			}
			set
			{
				if ((this._COST != value))
				{
					this.OnCOSTChanging(value);
					this.SendPropertyChanging();
					this._COST = value;
					this.SendPropertyChanged("COST");
					this.OnCOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIBE", DbType="NVarChar(MAX)")]
		public string DESCRIBE
		{
			get
			{
				return this._DESCRIBE;
			}
			set
			{
				if ((this._DESCRIBE != value))
				{
					this.OnDESCRIBEChanging(value);
					this.SendPropertyChanging();
					this._DESCRIBE = value;
					this.SendPropertyChanged("DESCRIBE");
					this.OnDESCRIBEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE_PRODUCT", DbType="NVarChar(MAX)")]
		public string IMAGE_PRODUCT
		{
			get
			{
				return this._IMAGE_PRODUCT;
			}
			set
			{
				if ((this._IMAGE_PRODUCT != value))
				{
					this.OnIMAGE_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._IMAGE_PRODUCT = value;
					this.SendPropertyChanged("IMAGE_PRODUCT");
					this.OnIMAGE_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CATEGORY", DbType="Char(50)")]
		public string ID_CATEGORY
		{
			get
			{
				return this._ID_CATEGORY;
			}
			set
			{
				if ((this._ID_CATEGORY != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._ID_CATEGORY = value;
					this.SendPropertyChanged("ID_CATEGORY");
					this.OnID_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DETAIL_RECEIPT", Storage="_DETAIL_RECEIPTs", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<DETAIL_RECEIPT> DETAIL_RECEIPTs
		{
			get
			{
				return this._DETAIL_RECEIPTs;
			}
			set
			{
				this._DETAIL_RECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_CATEGORY", ThisKey="ID_CATEGORY", OtherKey="ID_CATEGORY", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._ID_CATEGORY = value.ID_CATEGORY;
					}
					else
					{
						this._ID_CATEGORY = default(string);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAIL_RECEIPTs(DETAIL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_DETAIL_RECEIPTs(DETAIL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
}
#pragma warning restore 1591
